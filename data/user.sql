INSERT INTO public.el_user (id, created_at, created_by, last_modified_at, last_modified_by, version, username, password, display_name, email, status) VALUES ('cd5ecc40-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'admin', '2022-05-26 22:28:23.253184', 'admin', 1, 'au1', '$2a$10$p4PoQ/YLUQ6eNNOHJt1Ae.LF/T2YFGpFcczkDv/V/Zk66FWQqBAEe', 'author 1', 'author1@gmail.com', 'ACTIVE');
INSERT INTO public.el_user (id, created_at, created_by, last_modified_at, last_modified_by, version, username, password, display_name, email, status) VALUES ('cd5ece52-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'admin', '2022-05-26 22:28:23.253184', 'admin', 1, 'au2', '$2a$10$p4PoQ/YLUQ6eNNOHJt1Ae.LF/T2YFGpFcczkDv/V/Zk66FWQqBAEe', 'author 2', 'author2@gmail.com', 'ACTIVE');
INSERT INTO public.el_user (id, created_at, created_by, last_modified_at, last_modified_by, version, username, password, display_name, email, status) VALUES ('cd5ecf74-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'admin', '2022-05-26 22:28:23.253184', 'admin', 1, 'au3', '$2a$10$p4PoQ/YLUQ6eNNOHJt1Ae.LF/T2YFGpFcczkDv/V/Zk66FWQqBAEe', 'author 3', 'author3@gmail.com', 'ACTIVE');
INSERT INTO public.el_user (id, created_at, created_by, last_modified_at, last_modified_by, version, username, password, display_name, email, status) VALUES ('cd5ed082-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'admin', '2022-05-26 22:28:23.253184', 'admin', 1, 'stu1', '$2a$10$p4PoQ/YLUQ6eNNOHJt1Ae.LF/T2YFGpFcczkDv/V/Zk66FWQqBAEe', 'student 1', 'student1@gmail.com', 'ACTIVE');
INSERT INTO public.el_user (id, created_at, created_by, last_modified_at, last_modified_by, version, username, password, display_name, email, status) VALUES ('cd5ed226-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'admin', '2022-05-26 22:28:23.253184', 'admin', 1, 'stu2', '$2a$10$p4PoQ/YLUQ6eNNOHJt1Ae.LF/T2YFGpFcczkDv/V/Zk66FWQqBAEe', 'student 2', 'student2@gmail.com', 'ACTIVE');
INSERT INTO public.el_user (id, created_at, created_by, last_modified_at, last_modified_by, version, username, password, display_name, email, status) VALUES ('cd5ed334-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'admin', '2022-05-26 22:28:23.253184', 'admin', 1, 'stu3', '$2a$10$p4PoQ/YLUQ6eNNOHJt1Ae.LF/T2YFGpFcczkDv/V/Zk66FWQqBAEe', 'student 3', 'student3@gmail.com', 'ACTIVE');
INSERT INTO public.el_user (id, created_at, created_by, last_modified_at, last_modified_by, version, username, password, display_name, email, status) VALUES ('cd5ed4f6-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'admin', '2022-05-26 22:28:23.253184', 'admin', 1, 'stu4', '$2a$10$p4PoQ/YLUQ6eNNOHJt1Ae.LF/T2YFGpFcczkDv/V/Zk66FWQqBAEe', 'student 4', 'student4@gmail.com', 'ACTIVE');

INSERT INTO public.el_course(id, created_at, created_by, last_modified_at, last_modified_by, version, course_name, course_time, level, category, star_avg, total_star, total_rating, skill1, skill2, skill3)VALUES ('eeb2d95e-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'au1', '2022-05-26 22:28:23.253184', null, 1, 'HSQL Tutorials', 2, 'BEGINNER', 'DEVELOPMENT', 4, 12, 3, 'Java', 'Programing', 'Query Data');
INSERT INTO public.el_course(id, created_at, created_by, last_modified_at, last_modified_by, version, course_name, course_time, level, category, star_avg, total_star, total_rating, skill1, skill2, skill3)VALUES ('eeb2e3cc-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'au1', '2022-05-26 22:28:23.253184', null, 1, 'Dependency injection apply into Spring Boot', 6, 'MIDDLE', 'DEVELOPMENT', 4.25, 34, 8, 'Programing', 'Java', 'Spring Boot');
INSERT INTO public.el_course(id, created_at, created_by, last_modified_at, last_modified_by, version, course_name, course_time, level, category, star_avg, total_star, total_rating, skill1, skill2, skill3)VALUES ('eeb2f98e-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'au2', '2022-05-26 22:28:23.253184', null, 1, 'SQL Tutorials', 2, 'BEGINNER', 'DEVELOPMENT', 3.5, 7, 2, 'Database', 'Programing', 'Query Data');
INSERT INTO public.el_course(id, created_at, created_by, last_modified_at, last_modified_by, version, course_name, course_time, level, category, star_avg, total_star, total_rating, skill1, skill2, skill3)VALUES ('eeb300f0-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'au2', '2022-05-26 22:28:23.253184', null, 1, 'Entity Framework Tutorials', 3, 'MIDDLE', 'DEVELOPMENT', 0, 0, 0, 'Database', 'Programing', 'Query Data');
INSERT INTO public.el_course(id, created_at, created_by, last_modified_at, last_modified_by, version, course_name, course_time, level, category, star_avg, total_star, total_rating, skill1, skill2, skill3)VALUES ('eeb30848-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'au3', '2022-05-26 22:28:23.253184', null, 1, 'Photoshop on your iPad', 1, 'MIDDLE', 'DESIGN', 0, 0, 0, 'Photoshop', 'Design', 'Video Editor');
INSERT INTO public.el_course(id, created_at, created_by, last_modified_at, last_modified_by, version, course_name, course_time, level, category, star_avg, total_star, total_rating, skill1, skill2, skill3)VALUES ('eeb30c80-de6d-11ec-9d64-0242ac120002', '2022-05-26 22:28:23.253184', 'au3', '2022-05-26 22:28:23.253184', null, 1, 'Make a composite with layers on your iPad', 1, 'MIDDLE', 'DESIGN', 0, 0, 0, 'Photoshop', 'Design', 'Video Editor');

INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74bdc4-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'HSQLDB - Connect', '<p>In the installation chapter, we discussed how to connect the database manually. In this chapter, we will discuss how to connect the database programmatically (using Java programming).</p><p>Take a look at the following program, which will start the server and create a connection between the Java application and the database.</p><h2>Example</h2><pre class="prettyprint notranslate prettyprinted"><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">sql</span><span class="pun">.</span><span class="typ">Connection</span><span class="pun">;</span><span class="pln">&#10;</span><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">sql</span><span class="pun">.</span><span class="typ">DriverManager</span><span class="pun">;</span><span class="pln">&#10;&#10;</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ConnectDatabase</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;      </span><span class="typ">Connection</span><span class="pln"> con </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">&#10;      &#10;      </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;         </span><span class="com">//Registering the HSQLDB JDBC driver</span><span class="pln">&#10;         </span><span class="typ">Class</span><span class="pun">.</span><span class="pln">forName</span><span class="pun">(</span><span class="str">&#34;org.hsqldb.jdbc.JDBCDriver&#34;</span><span class="pun">);</span><span class="pln">&#10;         </span><span class="com">//Creating the connection with HSQLDB</span><span class="pln">&#10;         con </span><span class="pun">=</span><span class="pln"> </span><span class="typ">DriverManager</span><span class="pun">.</span><span class="pln">getConnection</span><span class="pun">(</span><span class="str">&#34;jdbc:hsqldb:hsql://localhost/testdb&#34;</span><span class="pun">,</span><span class="pln"> </span><span class="str">&#34;SA&#34;</span><span class="pun">,</span><span class="pln"> </span><span class="str">&#34;&#34;</span><span class="pun">);</span><span class="pln">&#10;         </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">con</span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">){</span><span class="pln">&#10;            </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">&#34;Connection created successfully&#34;</span><span class="pun">);</span><span class="pln">&#10;            &#10;         </span><span class="pun">}</span><span class="kwd">else</span><span class="pun">{</span><span class="pln">&#10;            </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">&#34;Problem with creating connection&#34;</span><span class="pun">);</span><span class="pln">&#10;         </span><span class="pun">}</span><span class="pln">&#10;      &#10;      </span><span class="pun">}</span><span class="pln">  </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;         e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">(</span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">);</span><span class="pln">&#10;      </span><span class="pun">}</span><span class="pln">&#10;   </span><span class="pun">}</span><span class="pln">&#10;</span><span class="pun">}</span></pre><p>Save this code into&#160;<span>ConnectDatabase.java</span>&#160;file. You will have to start the database using the following command.</p><pre class="result notranslate">\&gt;cd C:\hsqldb-2.3.4\hsqldb&#10;hsqldb&gt;java -classpath lib/hsqldb.jar org.hsqldb.server.Server --database.0&#10;file:hsqldb/demodb --dbname.0 testdb&#10;</pre><p>You can use the following command to compile and execute the code.</p><pre class="result notranslate">\&gt;javac ConnectDatabase.java&#10;\&gt;java ConnectDatabase&#10;</pre><p>After execution of the above command, you will receive the following output &#8722;</p><pre class="result notranslate">Connection created successfully</pre>', 'How to connect database', 'eeb2d95e-de6d-11ec-9d64-0242ac120002', 4, 8, 2);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74bf70-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'HSQLDB - Create Table', '<p>The basic mandatory requirements to create a table are table name, field names, and the data types to those fields. Optionally, you can also provide the key constraints to the table.</p><h2>Syntax</h2><p>Take a look at the following syntax.</p><pre class="result notranslate">CREATE TABLE table_name (column_name column_type);&#10;</pre><h2>Example</h2><p>Let us create a table named tutorials_tbl with the field-names such as id, title, author, and submission_date. Take a look at the following query.</p><pre class="prettyprint notranslate prettyprinted"><span class="pln">CREATE TABLE tutorials_tbl </span><span class="pun">(</span><span class="pln">&#10;   id INT NOT NULL</span><span class="pun">,</span><span class="pln">&#10;   title VARCHAR</span><span class="pun">(</span><span class="lit">50</span><span class="pun">)</span><span class="pln"> NOT NULL</span><span class="pun">,</span><span class="pln">&#10;   author VARCHAR</span><span class="pun">(</span><span class="lit">20</span><span class="pun">)</span><span class="pln"> NOT NULL</span><span class="pun">,</span><span class="pln">&#10;   submission_date DATE</span><span class="pun">,</span><span class="pln">&#10;   PRIMARY KEY </span><span class="pun">(</span><span class="pln">id</span><span class="pun">)</span><span class="pln"> &#10;</span><span class="pun">);</span></pre><p>After execution of the above query, you will receive the following output &#8722;</p><pre class="result notranslate">(0) rows effected&#10;</pre><h2>HSQLDB &#8211; JDBC Program</h2><p>Following is the JDBC program used to create a table named tutorials_tbl into the HSQLDB database. Save the program into&#160;<span>CreateTable.java</span>&#160;file.</p><pre class="prettyprint notranslate prettyprinted"><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">sql</span><span class="pun">.</span><span class="typ">Connection</span><span class="pun">;</span><span class="pln">&#10;</span><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">sql</span><span class="pun">.</span><span class="typ">DriverManager</span><span class="pun">;</span><span class="pln">&#10;</span><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">sql</span><span class="pun">.</span><span class="typ">Statement</span><span class="pun">;</span><span class="pln">&#10;&#10;</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">CreateTable</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;   &#10;   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;      &#10;      </span><span class="typ">Connection</span><span class="pln"> con </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">&#10;      </span><span class="typ">Statement</span><span class="pln"> stmt </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">&#10;      </span><span class="kwd">int</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">&#10;      &#10;      </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;         </span><span class="typ">Class</span><span class="pun">.</span><span class="pln">forName</span><span class="pun">(</span><span class="str">&#34;org.hsqldb.jdbc.JDBCDriver&#34;</span><span class="pun">);</span><span class="pln">&#10;         con </span><span class="pun">=</span><span class="pln"> </span><span class="typ">DriverManager</span><span class="pun">.</span><span class="pln">getConnection</span><span class="pun">(</span><span class="str">&#34;jdbc:hsqldb:hsql://localhost/testdb&#34;</span><span class="pun">,</span><span class="pln"> </span><span class="str">&#34;SA&#34;</span><span class="pun">,</span><span class="pln"> </span><span class="str">&#34;&#34;</span><span class="pun">);</span><span class="pln">&#10;         stmt </span><span class="pun">=</span><span class="pln"> con</span><span class="pun">.</span><span class="pln">createStatement</span><span class="pun">();</span><span class="pln">&#10;         &#10;         result </span><span class="pun">=</span><span class="pln"> stmt</span><span class="pun">.</span><span class="pln">executeUpdate</span><span class="pun">(</span><span class="str">&#34;CREATE TABLE tutorials_tbl (&#10;            id INT NOT NULL, title VARCHAR(50) NOT NULL,&#10;            author VARCHAR(20) NOT NULL, submission_date DATE,&#10;            PRIMARY KEY (id));&#10;         &#34;</span><span class="pun">);</span><span class="pln">&#10;&#9;&#9;&#9;&#10;      </span><span class="pun">}</span><span class="pln">  </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">&#10;         e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">(</span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">);</span><span class="pln">&#10;      </span><span class="pun">}</span><span class="pln">&#10;      </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">&#34;Table created successfully&#34;</span><span class="pun">);</span><span class="pln">&#10;   </span><span class="pun">}</span><span class="pln">&#10;</span><span class="pun">}</span></pre><p>You can start the database using the following command.</p><pre class="result notranslate">\&gt;cd C:\hsqldb-2.3.4\hsqldb&#10;hsqldb&gt;java -classpath lib/hsqldb.jar org.hsqldb.server.Server --database.0&#10;file:hsqldb/demodb --dbname.0 testdb</pre><p>Compile and execute the above program using the following command.</p><pre class="result notranslate">\&gt;javac CreateTable.java&#10;\&gt;java CreateTable&#10;</pre><p>After execution of the above command, you will receive the following output &#8722;</p><pre class="result notranslate">Table created successfully</pre>', 'How to create table in database', 'eeb2d95e-de6d-11ec-9d64-0242ac120002', 4, 4, 1);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74bf68-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'Học Spring Boot bắt đầu từ đâu?', '<h2>1. Gi&#7899;i thi&#7879;u Spring Boot</h2><h3>1.1. Spring Boot l&#224; g&#236;?</h3><p>Spring l&#224; m&#7897;t Java framework si&#234;u to v&#224; kh&#7893;ng l&#7891;, l&#224;m &#273;&#432;&#7907;c &#273;&#7911; m&#7885;i th&#7913;. N&#243; &#273;&#432;&#7907;c chia th&#224;nh nhi&#7873;u module, m&#7895;i module l&#224;m m&#7897;t ch&#7913;c n&#259;ng, v&#237; d&#7909; Spring Core, Web, Data access, AOP,... Spring &#273;&#432;&#7907;c x&#226;y d&#7921;ng d&#7921;a tr&#234;n 2 kh&#225;i ni&#7879;m n&#7873;n t&#7843;ng l&#224; Dependency injection v&#224; AOP (Aspect Oriented Programming).</p><p><span>M&#7897;t r&#7855;c r&#7889;i khi d&#249;ng Spring l&#224; vi&#7879;c c&#7845;u h&#236;nh (config) d&#7921; &#225;n qu&#225; ph&#7913;c t&#7841;p. B&#7841;n ph&#7843;i l&#224;m &#273;&#7911; th&#7913; vi&#7879;c ch&#7881; &#273;&#7875; t&#7841;o m&#7897;t web HelloWorld:</span></p><ul><li>T&#7841;o Maven ho&#7863;c Gradle project</li><li>Th&#234;m c&#225;c th&#432; vi&#7879;n c&#7847;n thi&#7871;t</li><li>T&#7841;o XML &#273;&#7875; c&#7845;u h&#236;nh project, c&#7845;u h&#236;nh c&#225;c bean</li><li>Code v&#224; build th&#224;nh file WAR</li><li>C&#7845;u h&#236;nh Tomcat server &#273;&#7875; ch&#7841;y &#273;&#432;&#7907;c file WAR v&#7915;a build</li></ul><p>&#272;&#7845;y, Spring kh&#225; m&#7841;nh m&#7869; nh&#432;ng vi&#7879;c c&#7845;u h&#236;nh nghe th&#244;i c&#361;ng m&#7879;t r&#7891;i. Do &#273;&#243; Spring boot ra &#273;&#7901;i, v&#7899;i c&#225;c &#432;u &#273;i&#7875;m:</p><ul><li>Auto config: t&#7921; &#273;&#7897;ng c&#7845;u h&#236;nh thay cho b&#7841;n, ch&#7881; c&#7847;n b&#7855;t &#273;&#7847;u code v&#224; ch&#7841;y l&#224; &#273;&#432;&#7907;c</li><li>X&#226;y d&#7921;ng c&#225;c bean d&#7921;a tr&#234;n annotation thay v&#236; XML</li><li>Server Tomcat &#273;&#432;&#7907;c nh&#250;ng ngay trong file JAR build ra, ch&#7881; c&#7847;n ch&#7841;y &#7903; b&#7845;t k&#236; &#273;&#226;u java ch&#7841;y &#273;&#432;&#7907;c.</li><li>So s&#225;nh v&#7899;i Spring, th&#236; Spring Boot b&#7841;n ch&#7881; c&#7847;n:</li></ul><ul><li>D&#249;ng Spring Initializr, nh&#7853;p c&#225;c info c&#7911;a project, ch&#7885;n th&#432; vi&#7879;n r&#7891;i down code v&#7873;</li><li>M&#7903; source code ra v&#224; b&#7855;t &#273;&#7847;u code</li><li>Ch&#7841;y ngay trong IDE, ho&#7863;c build th&#224;nh file JAR &#273;&#7875; ch&#7841;y &#273;&#432;&#7907;c ngay, kh&#244;ng c&#7847;n c&#7845;u h&#236;nh server</li></ul><h3>1.2. T&#7841;i sao n&#234;n h&#7885;c Spring Boot?</h3><p>Tr&#432;&#7899;c &#273;&#226;y m&#236;nh &#273;&#227; c&#243; t&#236;m hi&#7875;u v&#7873; Node.js v&#224; chuy&#7875;n sang Spring Boot. C&#7843;m nh&#7853;n c&#7911;a m&#236;nh l&#224; khi code Spring Boot ch&#250;ng ta s&#7869; t&#7853;p trung nhi&#7873;u h&#417;n v&#224;o business logic, ngh&#297;a l&#224; m&#7909;c ti&#234;u c&#7911;a code l&#224;m &#273;&#432;&#7907;c g&#236;.</p><p>V&#7899;i Node.js, do n&#243; qu&#225; linh ho&#7841;t n&#234;n b&#7841;n s&#7869; ph&#7843;i t&#7853;p trung nhi&#7873;u v&#224;o code h&#417;n, thay v&#236; m&#7909;c &#273;&#237;ch c&#7911;a code. Ki&#7875;u nh&#432; b&#7841;n ph&#7843;i t&#236;m &#34;best practice&#34;, &#34;c&#225;ch t&#7889;t nh&#7845;t&#34; &#273;&#7875; code &#273;i&#7873;u g&#236; &#273;&#243;.</p><p>Nh&#432;ng v&#7899;i Spring boot th&#236; kh&#225;c, c&#243; nhi&#7873;u th&#432; vi&#7879;n c&#243; s&#7861;n v&#224; c&#7845;u tr&#250;c code c&#361;ng th&#224;nh chu&#7849;n m&#7921;c r&#7891;i, n&#234;n b&#7841;n kh&#244;ng c&#7847;n qu&#225; quan t&#226;m ph&#7843;i vi&#7871;t code th&#7871; n&#224;o cho t&#7889;t n&#7919;a, thay v&#224;o &#273;&#243; s&#7869; t&#7853;p trung v&#224;o logic h&#417;n.</p><p>M&#236;nh th&#7845;y nhi&#7873;u b&#7841;n h&#7887;i c&#226;u n&#224;y: &#34;N&#234;n h&#7885;c Spring hay Spring Boot tr&#432;&#7899;c?&#34;. Theo m&#236;nh th&#236; n&#234;n h&#7885;c Spring Boot tr&#432;&#7899;c.</p><p>M&#236;nh ngh&#297; t&#432; t&#432;&#7903;ng c&#7911;a nhi&#7873;u b&#7841;n v&#7851;n mang n&#7863;ng ki&#7875;u &#34;c&#225;i c&#361; t&#7889;t h&#417;n c&#225;i m&#7899;i&#34;, &#34;t&#236;m hi&#7875;u t&#7915; g&#7889;c&#34;,... nh&#432;ng th&#7921;c s&#7921; khi b&#7855;t &#273;&#7847;u n&#234;n t&#236;m hi&#7875;u c&#225;i d&#7877; d&#224;ng h&#417;n. V&#7915;a &#273;&#7905; n&#7843;n, v&#7915;a l&#224;m &#273;&#432;&#7907;c s&#7843;n ph&#7849;m th&#7921;c t&#7871;, trong khi v&#7899;i Spring b&#7841;n v&#7851;n c&#242;n &#273;ang ph&#7843;i c&#7845;u h&#236;nh qu&#225; nhi&#7873;u v&#224; ch&#432;a l&#224;m &#273;&#432;&#7907;c g&#236; ra h&#7891;n c&#7843;.</p><h2>2. C&#7847;n t&#236;m hi&#7875;u nh&#7919;ng g&#236;</h2><h3>2.1. Java Core</h3><p>Tr&#432;&#7899;c khi h&#7885;c Spring Boot th&#236; c&#225;c b&#7841;n c&#7847;n bi&#7871;t Java. M&#7897;t s&#7889; ki&#7871;n th&#7913;c c&#7847;n thi&#7871;t c&#7911;a Java nh&#432; sau:</p><ul><li>Java c&#417; b&#7843;n: bi&#7871;n, h&#224;m, v&#242;ng l&#7863;p,...</li><li>H&#432;&', 'Kiến thức cơ bản', 'eeb2e3cc-de6d-11ec-9d64-0242ac120002', 3.666666667, 11, 3);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74c062-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'Tạo dự án Spring Boot đầu tiên', '<h2>1. Chu&#7849;n b&#7883;</h2><h2><p>&#272;&#7889;i v&#7899;i Spring Boot th&#236; c&#225;c b&#7841;n c&#243; th&#7875; ch&#7885;n m&#7897;t trong hai IDE l&#224; Eclipse (mi&#7877;n ph&#237;) v&#224; IntelliJ IDEA Ultimate (b&#7843;n Community kh&#244;ng c&#243; h&#7895; tr&#7907; Spring). T&#7843;i xu&#7889;ng t&#7841;i &#273;&#226;y:</p><ul><li>Eclipse:&#160;<a href="https://www.eclipse.org/downloads/" target="_blank">https://www.eclipse.org/downloads/</a></li><li>IntelliJ IDEA:&#160;<a href="https://www.jetbrains.com/idea/download/" target="_blank">https://www.jetbrains.com/idea/download/</a></li></ul><p>M&#236;nh khuy&#7871;n kh&#237;ch c&#225;c b&#7841;n d&#249;ng IntelliJ, v&#236; code r&#7845;t s&#432;&#7899;ng v&#224; &#237;t l&#7895;i v&#7863;t nh&#432; Eclipse. V&#7899;i IntelliJ th&#236; c&#243; plugin s&#7861;n r&#7891;i, kh&#244;ng c&#7847;n c&#224;i nhi&#7873;u. C&#242;n Eclipse b&#7841;n c&#7847;n c&#224;i th&#234;m STS (Spring tool suite). C&#243; th&#7875; download JAR t&#7841;i &#273;&#226;y, ho&#7863;c t&#236;m trong Marketplace c&#7911;a Eclipse.</p><p>Trong ph&#7847;n sau, m&#236;nh s&#7869; s&#7917; d&#7909;ng IntelliJ &#273;&#7875; demo nh&#233;.</p></h2><h2>2. Spring initializr</h2><h2><p>Spring Boot c&#243; m&#7897;t c&#244;ng c&#7909; gi&#250;p ch&#250;ng ta nhanh ch&#243;ng kh&#7903;i t&#7841;o project g&#7885;i l&#224; Spring Initializr. Spring Initializr c&#243; th&#7875; truy c&#7853;p tr&#234;n web t&#7841;i&#160;<a href="http://start.spring.io/" target="_blank">http://start.spring.io/</a>, ho&#7863;c v&#7899;i IntelliJ th&#236; c&#243; t&#237;ch h&#7907;p lu&#244;n v&#224;o khi t&#7841;o project lu&#244;n.</p><p><span>2.1. Khai b&#225;o th&#244;ng tin project</span></p></h2><h2><p>Nh&#432; h&#236;nh tr&#234;n, &#7903; ng&#259;n b&#234;n tr&#225;i l&#224; n&#417;i ch&#250;ng ta khai b&#225;o m&#7897;t s&#7889; th&#244;ng tin project nh&#432;:</p><ul><li>Lo&#7841;i project: l&#224; ch&#7885;n lo&#7841;i package manager n&#224;o, Maven ho&#7863;c Gradle.</li><li>Language: ch&#7885;n ng&#244;n ng&#7919; code, &#7903; &#273;&#226;y m&#236;nh ch&#7885;n Java</li><li>Phi&#234;n b&#7843;n Spring Boot: C&#225;c version c&#243; SNAPSHOT l&#224; b&#7843;n ch&#432;a &#7893;n &#273;&#7883;nh, kh&#244;ng n&#234;n ch&#7885;n</li><li>Lo&#7841;i file build ra: v&#7899;i Spring Boot th&#236; n&#234;n ch&#7885;n JAR &#273;&#7875; &#273;&#7905; c&#7845;u h&#236;nh Tomcat server</li><li>Phi&#234;n b&#7843;n Java: ch&#7885;n java 11 &#273;&#7875; &#7893;n &#273;&#7883;nh</li></ul><p>Ngo&#224;i ra c&#361;ng c&#7847;n khai b&#225;o th&#234;m c&#225;c metadata nh&#432; t&#234;n project, t&#234;n package, artifact,...</p></h2><h3>2.2. Ch&#7885;n dependency</h3><h2><p>Ng&#259;n b&#234;n ph&#7843;i l&#224; ch&#7885;n c&#225;c dependency, c&#243; th&#7875; hi&#7875;u l&#224; c&#225;c th&#432; vi&#7879;n ph&#7909; tr&#7907;. &#272;&#7875; code &#273;&#432;&#7907;c web service b&#7841;n c&#7847;n c&#243; Spring web. C&#225;c th&#432; vi&#7879;n kh&#225;c c&#243; &#253; ngh&#297;a nh&#432; sau:</p><ul><li>Lombok: n&#234;n ch&#7885;n, n&#243; gi&#250;p code Java ng&#7855;n h&#417;n, nh&#432;ng c&#7847;n c&#224;i th&#234;m plugin Lombok v&#224;o IDE n&#7919;a</li><li>Thymeleaf: ch&#432;a c&#7847;n, Thymeleaf s&#7869; gi&#250;p pass data v&#224;o view c&#7911;a m&#244; h&#236;nh MVC, tr&#7843; v&#7873; trang HTML c&#243; data cho client</li><li>Spring configuration processor, Spring devtools l&#224; c&#225;c tool h&#7895; tr&#7907; th&#234;m khi code th&#244;i</li></ul><p>Trong ph&#7847;n n&#224;y, m&#236;nh khuy&#7871;n kh&#237;ch c&#225;c b&#7841;n ch&#7885;n g&#7891;m: Spring Web, Lombok, Thymeleaf.</p><p><span>2.3. Ho&#224;n t&#7845;t</span></p></h2><h2><p>Sau khi xong, c&#225;c b&#7841;n nh&#7845;n n&#250;t Generate l&#224; xong. M&#7897;t file zip ch&#7913;a source ban &#273;&#7847;u s&#7869; &#273;&#432;&#7907;c t&#7843;i v&#7873;, ch&#7881; c&#7847;n gi&#7843;i n&#233;n v&#224; b&#7855;t &#273;&#7847;u code.</p><p>C&#7845;u tr&#250;c project &#273;&#432;&#7907;c kh&#7903;i t&#7841;o s&#7861;n nh&#432; sau.</p><p><span>3. Code ch&#432;&#417;ng tr&#236;nh &#273;&#417;n gi&#7843;n</span></p></h2><h2><p>Ph&#7847;n n&#224;y m&#236;nh s&#7869; h&#432;&#7899;ng d&#7851;n t&#7841;o m&#7897;t web tr&#7843; v&#7873; HTML &#273;&#417;n gi&#7843;n khi ng&#432;&#7901;i d&#249;ng truy c&#7853;p.</p><p><span>B1. T&#7841;o Controller &#273;&#417;n gi&#7843;n</span></p><p>Controller l&#224; th&#224;nh ph&#7847;n &#273;&#7847;u ti&#234;n &#273;&#7875; b&#7855;t URL ng&#432;&#7901;i d&#249;ng truy c&#7853;p. V&#237; d&#7909; b&#7841;n v&#224;o trang ch&#7911; c&#7911;a web, th&#236; controller method c&#243; mapping t&#7899;i URL / s&#7869; &#273;&#432;&#7907;c g&#7885;i.</p><p>C&#225;c b&#7841;n chu&#7897;t ph&#7843;i v&#224;o entry b&#234;n tr&#225;i c&#243; t&#234;n l&#224;&#160;<code>com.abc.xyz</code>, ch&#7885;n New &gt; Java class. &#272;&#7863;t t&#234;n l&#224;&#160;<code>HomeController</code>&#160;v&#224; g&', 'Cách tạo dự án Spring Boot', 'eeb2e3cc-de6d-11ec-9d64-0242ac120002', 5, 10, 2);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74c18e-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'Dependency injection áp dụng vào Spring Boot (phần 1)', '<h2><p>B&#224;i ti&#7871;p theo &#273;&#226;y s&#7869; b&#224;n v&#7873; kh&#225;i ni&#7879;m si&#234;u quan tr&#7885;ng l&#224; Dependency injection, v&#224; c&#225;ch s&#7917; d&#7909;ng ra sao trong Spring Boot nh&#233;.</p></h2><h2>1. Module coupling</h2><h3>1.1. Coupling l&#224; g&#236;?</h3><h2><p>Tr&#432;&#7899;c h&#7871;t c&#7847;n n&#243;i s&#417; qua v&#7873; kh&#225;i ni&#7879;m&#160;<span>module coupling</span>. Coupling c&#243; th&#7875; hi&#7875;u l&#224; m&#7889;i quan h&#7879; gi&#7919;a hai module, hai &#273;&#7889;i t&#432;&#7907;ng v&#7899;i nhau, c&#243; s&#7921; ph&#7909; thu&#7897;c l&#7851;n nhau.</p><p>V&#224; coupling c&#243; hai lo&#7841;i:</p><ul><li>Tight coupling: hai module li&#234;n k&#7871;t ch&#7863;t ch&#7869;, kh&#243; t&#225;ch r&#7901;i</li><li>Loose coupling: li&#234;n k&#7871;t y&#7871;u, r&#7901;i r&#7841;c</li></ul><p>Trong ch&#432;&#417;ng tr&#236;nh, th&#432;&#7901;ng s&#7869; c&#243; nhi&#7873;u module ri&#234;ng r&#7869;, m&#7895;i module c&#243; ch&#7913;c n&#259;ng ri&#234;ng, v&#224; c&#243; quan h&#7879; v&#7899;i nhau (HAS-A trong OOP).</p><p><span>V&#237; d&#7909; nh&#432; hai module</span><span>&#160;</span><span>Xe h&#417;i</span><span>&#160;</span><span>v&#224;</span><span>&#160;</span><span>&#272;&#7897;ng c&#417;</span><span>, xe h&#417;i ph&#7909; thu&#7897;c v&#224;o &#273;&#7897;ng c&#417; m&#7899;i c&#243; th&#7875; ch&#7841;y &#273;&#432;&#7907;c. Th&#7875; hi&#7879;n d&#7841;ng code nh&#432; sau.</span></p><div><pre class="language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">ChinaEngine</span> <span class="token punctuation">{</span>&#10;    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>&#10;<span class="token punctuation">}</span>&#10;&#10;<span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>&#10;    <span class="token keyword">private</span> <span class="token class-name">ChinaEngine</span> engine<span class="token punctuation">;</span>&#10;    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>&#10;        <span class="token comment">// Khi t&#7841;o Car th&#236; nh&#7899; g&#7855;n engine v&#224;o :D</span>&#10;        engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChinaEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>&#10;    <span class="token punctuation">}</span>&#10;<span class="token punctuation">}</span>&#10;</code></pre><span class="v-markdown-icon el-icon-document-copy"></span></div></h2><h3>1.2. Nguy&#234;n t&#7855;c v&#7873; s&#7921; ph&#7909; thu&#7897;c</h3><h2><p>Ch&#250;ng ta v&#7915;a &#273;i qua kh&#225;i ni&#7879;m coupling. Ti&#7871;p theo &#273;&#226;y l&#224; nguy&#234;n t&#7855;c quan tr&#7885;ng li&#234;n quan t&#7899;i n&#243; m&#224; c&#225;c b&#7841;n c&#7847;n nh&#7899;.</p><blockquote><p>&#272;&#7875; code d&#7877; b&#7843;o tr&#236; v&#224; s&#7917;a &#273;&#7893;i, th&#236; nguy&#234;n t&#7855;c l&#224; ph&#7843;i&#160;<span>gi&#7843;m s&#7921; ph&#7909; thu&#7897;c</span>&#160;gi&#7919;a c&#225;c module.</p><p>Ngh&#297;a l&#224; bi&#7871;n m&#7889;i quan h&#7879; gi&#7919;a ch&#250;ng t&#7915; tight coupling th&#224;nh loose coupling.</p></blockquote><p>Nh&#432; code ph&#237;a tr&#234;n, s&#7921; ph&#7909; thu&#7897;c gi&#7919;a&#160;<code>Car</code>&#160;v&#224;&#160;<code>ChinaEngine</code>&#160;r&#7845;t m&#7841;nh. &#272;i&#7873;u n&#224;y d&#7851;n t&#7899;i nhi&#7873;u kh&#243; kh&#259;n:</p><ul><li>Mu&#7889;n thay &#273;&#7893;i &#273;&#7897;ng c&#417;, c&#7847;n s&#7917;a class&#160;<code>Car</code></li><li>Kh&#244;ng th&#7875; n&#224;o c&#243; hai&#160;<code>Car</code>&#160;m&#224; s&#7917; d&#7909;ng c&#225;c&#160;<code>Engine</code>&#160;kh&#225;c nhau &#273;&#432;&#7907;c</li><li>Kh&#243; test c&#225;c module h&#417;n</li></ul><p>Trong ch&#432;&#417;ng tr&#236;nh kh&#244;ng ch&#7881; c&#243; 1, 2 module nh&#432; v&#237; d&#7909; tr&#234;n, m&#224; c&#243; r&#7845;t nhi&#7873;u. Do &#273;&#243;, n&#7871;u c&#225;c module d&#237;nh qu&#225; ch&#7863;t v&#224;o nhau th&#236; s&#7869; r&#7845;t kh&#243; b&#7843;o tr&#236;.</p></h2><h2>2. Nguy&#234;n l&#253; Dependency inversion</h2><h3>2.1. Dependency inversion principle</h3><h2><p>&#272;&#226;y l&#224; nguy&#234;n l&#253; s&#7889; 5 trong SOLID principles, t&#432;&#417;ng &#7913;ng v&#7899;i ch&#7919; D. &#272;&#432;&#7907;c &#273;&#432;a ra &#273;&#7875; thi&#7871;t k&#7871; c&#225;c module trong ch&#432;&#417;ng tr&#236;nh, sao cho c&#243; &#237;t s&#7921; ph&#7909; thu&#7897;c nh&#7845;t c&#243; th&#7875;.</p><p>DI principle c&#243; hai &#253; ch&#2', 'Dependency injection in Spring Boot', 'eeb2e3cc-de6d-11ec-9d64-0242ac120002', 4.333333333, 13, 3);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74c26a-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'Dependency injection áp dụng vào Spring Boot như thế nào (phần 2)', '<h2>1. Inversion of Control (IoC)</h2><h3>1.1. IoC l&#224; g&#236; &#273;&#226;y?</h3><h2><p>Trong ph&#7847;n tr&#432;&#7899;c ch&#250;ng ta &#273;&#227; t&#236;m hi&#7875;u nguy&#234;n l&#253; Dependency inversion, v&#224; &#273;&#227; n&#7855;m &#273;&#432;&#7907;c nguy&#234;n t&#7855;c &#273;&#7875; vi&#7871;t code t&#7889;t h&#417;n. Tuy nhi&#234;n, DI principle ch&#7881; &#273;&#417;n gi&#7843;n l&#224; nguy&#234;n l&#253; th&#244;i, c&#242;n vi&#7879;c th&#7921;c hi&#7879;n th&#236; kh&#244;ng n&#243;i r&#245;. Ch&#250;ng ta c&#243; th&#7875; th&#7921;c hi&#7879;n nh&#432; ph&#7847;n tr&#432;&#7899;c, l&#224; t&#7841;o t&#7915;ng object ri&#234;ng r&#7869;, sau &#273;&#243; g&#7855;n ch&#250;ng l&#7841;i v&#7899;i nhau (qua constructor).</p><p>Tuy nhi&#234;n, n&#7871;u ch&#432;&#417;ng tr&#236;nh c&#243; nhi&#7873;u module, nhi&#7873;u object th&#236; s&#7869; g&#7863;p t&#236;nh tr&#7841;ng nh&#432;:</p><ul><li>G&#7855;n thi&#7871;u module v&#224;o module kh&#225;c</li><li>Ph&#7843;i quan t&#226;m t&#7899;i th&#7913; t&#7921; kh&#7903;i t&#7841;o module (t&#7841;o module n&#224;o tr&#432;&#7899;c)</li><li>Ph&#7909; thu&#7897;c v&#242;ng (A ph&#7909; thu&#7897;c B, v&#224; B c&#361;ng ph&#7909; thu&#7897;c A, suy ra kh&#244;ng bi&#7871;t t&#7841;o A hay B tr&#432;&#7899;c)</li></ul><p>C&#225;ch l&#224;m t&#7841;o c&#225;c module ri&#234;ng r&#7869;, sau &#273;&#243; g&#7855;n l&#7841;i g&#7885;i l&#224; c&#225;ch b&#236;nh th&#432;&#7901;ng&#160;<img class="emoji" alt="&#128516;" src="https://twemoji.maxcdn.com/2/72x72/1f604.png">. Do c&#225;c nh&#432;&#7907;c &#273;i&#7875;m tr&#234;n, hi&#7879;n nay ng&#432;&#7901;i ta &#273;&#432;a ra kh&#225;i ni&#7879;m IoC - Inversion of Control - &#273;&#7843;o ng&#432;&#7907;c s&#7921; &#273;i&#7873;u khi&#7875;n.</p><blockquote><p>IoC nh&#7857;m m&#7909;c &#273;&#237;ch &#273;&#417;n gi&#7843;n h&#243;a qu&#225; tr&#236;nh t&#7841;o &#273;&#7889;i t&#432;&#7907;ng v&#224; li&#234;n k&#7871;t gi&#7919;a ch&#250;ng, b&#7857;ng c&#225;ch tu&#226;n theo nguy&#234;n t&#7855;c: Kh&#244;ng t&#7841;o &#273;&#7889;i t&#432;&#7907;ng, ch&#7881; m&#244; t&#7843; c&#225;ch ch&#250;ng s&#7869; &#273;&#432;&#7907;c t&#7841;o ra.</p></blockquote><p>Do qu&#225; tr&#236;nh n&#224;y ph&#7913;c t&#7841;p v&#224; kh&#243; implement, n&#234;n &#273;&#227; c&#243; nhi&#7873;u framework ra &#273;&#7901;i h&#7895; tr&#7907; IoC, &#273;i&#7875;n h&#236;nh nh&#432; Spring cho Java ho&#7863;c Angular c&#7911;a JavaScript.</p><p>IoC framework s&#7869; c&#243; c&#225;c th&#224;nh ph&#7847;n c&#243; s&#7861;n l&#224;m nhi&#7879;m v&#7909; t&#7841;o, qu&#7843;n l&#253; c&#225;c &#273;&#7889;i t&#432;&#7907;ng trong ch&#432;&#417;ng tr&#236;nh. IoC s&#7869; qu&#7843;n l&#253;, ph&#226;n t&#237;ch c&#225;c m&#7889;i ph&#7909; thu&#7897;c, t&#7841;o c&#225;c &#273;&#7889;i t&#432;&#7907;ng theo th&#7913; t&#7921; ph&#249; h&#7907;p nh&#7845;t v&#224; li&#234;n k&#7871;t ch&#250;ng l&#7841;i v&#7899;i nhau, theo c&#225;ch l&#7853;p tr&#236;nh vi&#234;n m&#244; t&#7843;.</p><p>Inversion of control c&#243; nhi&#7873;u ki&#7875;u &#273;&#7875; th&#7921;c hi&#7879;n, nh&#432; d&#249;ng ServiceLocator, Delegate,&#8230; nh&#432;ng ph&#7893; bi&#7871;n nh&#7845;t l&#224; Dependency injection. M&#236;nh s&#7869; tr&#236;nh b&#224;y v&#7873; n&#243; &#7903; ph&#7847;n sau.</p></h2><h3>1.1. Code v&#237; d&#7909;</h3><h2><p>Nh&#432; tr&#234;n, nh&#7901; c&#243; IoC ch&#250;ng ta kh&#244;ng c&#7847;n t&#7921; m&#236;nh t&#7841;o c&#225;c module b&#7857;ng&#160;<span>new</span>&#160;nh&#432; tr&#432;&#7899;c n&#7919;a. Ch&#250;ng ta kh&#244;ng c&#7847;n vi&#7871;t code nh&#432; sau &#273;&#7875; t&#7841;o ra hai module&#160;<code>goodEngine</code>&#160;v&#224;&#160;<code>myCar</code>.</p><div><pre class="language-java"><code class="language-java"><span class="token class-name">Engine</span> goodEngine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VNEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>&#10;<span class="token class-name">Car</span> myCar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span>goodEngine<span class="token punctuation">)</span><span class="token punctuation">;</span>&#10;</code></pre><span class="v-markdown-icon el-icon-document-copy"></span></div><p>Code tr&#234;n ch&#250;ng ta v&#7915;a t&#7841;o, v&#7915;a li&#234;n k&#7871;t hai &#273;&#7889;i t&#432;&#7907;ng l&#7841;i v&#7899;i nhau. Nh&#432;ng v&#7899;i IoC framework th&#236; kh&#244;ng, ch&#250;ng ta ch&#7881; c&#7847;n &#273;&#225;nh d&#7845;u (mark) tr&#234;n c&#225;c class. IoC framework s&#7869; d&#7921;a v&#224;o &#273;&#243; &#273;&#7875; t&#7841;o module &#273;&#250;ng theo y&#234;u c&#7847;u.</p><div><pre class="language-java"><code class="language-java"><span class="toke', 'Dependency injection in Spring Boot', 'eeb2e3cc-de6d-11ec-9d64-0242ac120002', 0, 0, 0);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74cbfc-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'Bean và ApplicationContext là gì trong Spring Boot', '<h2>1. Bean v&#224; ApplicationContext l&#224; g&#236;?</h2><h3>1.1. Bean l&#224; g&#236;?</h3><h2><p>Trong documentation c&#7911;a Spring framework, th&#236;&#160;<span>bean</span>&#160;&#273;&#432;&#7907;c &#273;&#7883;nh ngh&#297;a nh&#432; sau:</p><blockquote><p>In Spring, the objects that form the backbone of your application and that are managed by the Spring IoC container are called beans. A bean is an object that is instantiated, assembled, and otherwise managed by a Spring IoC container.</p></blockquote><p>N&#243;i m&#7897;t c&#225;ch &#273;&#417;n gi&#7843;n, bean l&#224; nh&#7919;ng module ch&#237;nh c&#7911;a ch&#432;&#417;ng tr&#236;nh, &#273;&#432;&#7907;c t&#7841;o ra v&#224; qu&#7843;n l&#253; b&#7903;i Spring IoC container.</p><p>C&#225;c bean c&#243; th&#7875; ph&#7909; thu&#7897;c l&#7851;n nhau, nh&#432; v&#237; d&#7909; v&#7873;&#160;<code>Car</code>,&#160;<code>Engine</code>&#160;v&#224;&#160;<code>ChinaEngine</code>&#160;t&#7915; &#273;&#7847;u series t&#7899;i gi&#7901;. S&#7921; ph&#7909; thu&#7897;c n&#224;y &#273;&#432;&#7907;c m&#244; t&#7843; cho IoC bi&#7871;t nh&#7901; c&#417; ch&#7871; Dependency injection.</p><p>C&#225;ch &#273;&#225;nh d&#7845;u class l&#224; m&#7897;t bean th&#236; m&#236;nh s&#7869; tr&#236;nh b&#224;y trong b&#224;i ti&#7871;p theo. L&#250;c n&#224;y c&#225;c b&#7841;n ch&#7881; c&#7847;n bi&#7871;t &#273;&#417;n gi&#7843;n nh&#7845;t l&#224; d&#249;ng&#160;<code>@Component</code>&#160;l&#234;n class l&#224; class &#273;&#243; l&#224; m&#7897;t bean.</p></h2><h3>1.2. ApplicationContext l&#224; g&#236;?</h3><h2><p><span>ApplicationContext</span>&#160;l&#224; kh&#225;i ni&#7879;m Spring Boot d&#249;ng &#273;&#7875; ch&#7881; Spring IoC container, t&#432;&#417;ng t&#7921; nh&#432; bean l&#224; &#273;&#7841;i di&#7879;n cho c&#225;c dependency.</p><p>Ngo&#224;i ra b&#7841;n c&#243; th&#7875; s&#7869; nghe n&#243;i v&#7873; BeanFactory. N&#243; c&#361;ng &#273;&#7841;i lo&#7841;i nh&#432; ApplicationContext, &#273;&#7841;i di&#7879;n cho Spring IoC container nh&#432;ng &#7903; m&#7913;c c&#417; b&#7843;n. ApplicationContext th&#236; &#7903; m&#7913;c cao h&#417;n, cung c&#7845;p nhi&#7873;u t&#237;nh n&#259;ng h&#417;n BeanFactory nh&#432; i18n, resolving messages, publishing events,...</p><p><span>Khi &#7913;ng d&#7909;ng Spring ch&#7841;y, Spring IoC container s&#7869; qu&#233;t to&#224;n b&#7897; packages, t&#236;m ra c&#225;c bean v&#224; &#273;&#432;a v&#224;o ApplicationContext. C&#417; ch&#7871; &#273;&#243; l&#224; Component scan, c&#361;ng s&#7869; &#273;&#432;&#7907;c n&#243;i t&#7899;i trong b&#224;i ti&#7871;p theo.</span></p></h2><h3>1.3. C&#225;ch l&#7845;y bean ra t&#7915; Context</h3><h2><p>T&#7845;t nhi&#234;n tr&#432;&#7899;c khi l&#7845;y bean ra t&#7915; context th&#236; ph&#7843;i c&#243; context r&#7891;i&#160;<img class="emoji" alt="&#128550;" src="https://twemoji.maxcdn.com/2/72x72/1f626.png">&#160;C&#226;u h&#7887;i &#273;&#7863;t ra l&#224; bi&#7871;n context &#7903; &#273;&#226;u?</p><p>&#272;&#243; l&#224; ngay d&#242;ng b&#7855;t &#273;&#7847;u ch&#432;&#417;ng tr&#236;nh Spring Boot. C&#226;u l&#7879;nh sau.</p><div><pre class="language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span>&#10;<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>&#10;    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>&#10;        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>&#10;    <span class="token punctuation">}</span>&#10;<span class="token punctuation">}</span>&#10;</code></pre><span class="v-markdown-icon el-icon-document-copy"></span></div><p>D&#242;ng method&#160;<code>SpringApplication.run()</code>&#160;s&#7869; return v&#7873; m&#7897;t object&#160;<code>ApplicationContext</code>&#160;interface, &#273;&#7841;i di&#7879;n cho IoC container.</p><div><pre class="language-java"><code class="language-java"><span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</s', 'How to use Bean và ApplicationContext', 'eeb2e3cc-de6d-11ec-9d64-0242ac120002', 0, 0, 0);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74c90e-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au1', '2022-05-23 18:31:42.386219', 'au1', 1, 'Cấu trúc dự án Spring Boot thế nào cho chuẩn', '<h2>1. C&#7845;u tr&#250;c &#7913;ng d&#7909;ng</h2><h3>1.1. C&#7845;u tr&#250;c chung c&#7911;a &#7913;ng d&#7909;ng</h3><h2><p>D&#249; cho project &#273;&#432;&#7907;c t&#7841;o v&#7899;i Maven hay Gradle th&#236; c&#7845;u tr&#250;c chung v&#7851;n t&#432;&#417;ng t&#7921; nhau, do tu&#226;n theo m&#7897;t template c&#243; s&#7861;n (t&#234;n l&#224; Archetype):</p><ul><li>Th&#432; m&#7909;c g&#7889;c ch&#7913;a c&#225;c file linh tinh nh&#432;&#160;<code>pom.xml</code>&#160;(c&#7911;a Maven),&#160;<code>build.gradle</code>&#160;v&#224; c&#225;c file kh&#225;c nh&#432;&#160;<code>.gitignore</code>,... d&#249;ng &#273;&#7875; c&#7845;u h&#236;nh d&#7921; &#225;n.</li><li>Th&#432; m&#7909;c&#160;<code>.mvn</code>&#160;ho&#7863;c&#160;<code>.gradle</code>&#160;l&#224; th&#432; m&#7909;c ri&#234;ng c&#7911;a Maven v&#224; Gradle, &#273;&#7915;ng n&#234;n &#273;&#7909;ng t&#7899;i hay exclude n&#243; ra kh&#7887;i source code.</li><li>Code &#273;&#432;&#7907;c ch&#7913;a trong th&#432; m&#7909;c&#160;<code>src</code>.</li><li>Th&#432; m&#7909;c build ra ch&#7913;a c&#225;c file class, file JAR. V&#7899;i Maven l&#224;&#160;<code>target</code>&#160;c&#242;n Gradle l&#224;&#160;<code>build</code>.</li></ul><p>Nh&#432; &#273;&#227; n&#243;i &#7903; tr&#234;n th&#236; source code ch&#7913;a trong th&#432; m&#7909;c&#160;<code>src</code>. Ch&#250;ng ta s&#7869; &#273;i s&#226;u h&#417;n trong ph&#7847;n ti&#7871;p theo.</p></h2><h3>1.2. Chi ti&#7871;t c&#7845;u tr&#250;c source code</h3><h3>Nh&#432; h&#236;nh, th&#432; m&#7909;c ch&#237;nh ch&#250;ng ta c&#7847;n quan t&#226;m l&#224;<span>&#160;</span><code>src/main/java/&lt;t&#234;n package&gt;</code><span>. M&#7885;i code java &#273;&#7873;u n&#7857;m trong n&#224;y:</span></h3><h2><ul><li>T&#234;n package ch&#237;nh &#273;&#432;&#7907;c &#273;&#7863;t d&#7841;ng ng&#432;&#7907;c v&#7899;i t&#234;n mi&#7873;n. V&#237; d&#7909; nh&#432;&#160;<code>tonghoangvu.com</code>&#160;th&#236; &#273;&#7863;t th&#224;nh&#160;<code>com.tonghoangvu</code>. C&#7897;ng th&#234;m t&#234;n project n&#7919;a.</li><li>C&#243; c&#225;c package con, m&#7895;i package &#273;&#7841;i di&#7879;n cho c&#225;c class thu&#7897;c layer c&#7909; th&#7875; (v&#237; d&#7909; nh&#432;&#160;<code>service</code>,&#160;<code>controller</code>,...)</li><li>Th&#432; m&#7909;c&#160;<code>resources</code>&#160;ch&#7913;a c&#225;c t&#224;i nguy&#234;n c&#7911;a &#7913;ng d&#7909;ng nh&#432; h&#236;nh &#7843;nh, static file, properties file,...</li></ul><p>Ngo&#224;i ra c&#242;n c&#243;&#160;<code>src/test</code>&#160;d&#249;ng &#273;&#7875; ch&#7913;a c&#225;c test class, d&#249;ng cho unit test.</p></h2><h2>2. T&#7893; ch&#7913;c source code theo m&#244; h&#236;nh 3 l&#7899;p</h2><h2><p>D&#224;nh cho c&#225;c b&#7841;n ch&#432;a nh&#7899; v&#7873; m&#244; h&#236;nh 3 l&#7899;p c&#243; th&#7875; xem l&#7841;i b&#224;i vi&#7871;t n&#224;y nh&#233;&#160;<a href="https://viblo.asia/p/luong-di-trong-spring-boot-ORNZqdELK0n" target="_blank">https://viblo.asia/p/luong-di-trong-spring-boot-ORNZqdELK0n</a>. Th&#7921;c s&#7921; th&#236; m&#244; h&#236;nh 3 l&#7899;p c&#7847;n thi&#7871;t ph&#7843;i n&#7855;m r&#245;, v&#236; h&#7847;u h&#7871;t c&#225;c d&#7921; &#225;n Spring Boot &#273;&#7873;u tu&#226;n theo m&#244; h&#236;nh n&#224;y.</p><p><span>T&#432;&#417;ng &#7913;ng v&#7899;i t&#7915;ng th&#224;nh ph&#7847;n c&#7911;a m&#244; h&#236;nh 3 l&#7899;p, th&#236; ch&#250;ng ta s&#7869; c&#243; c&#225;c th&#432; m&#7909;c v&#224; c&#225;ch &#273;&#7863;t t&#234;n t&#432;&#417;ng &#7913;ng:</span></p><ul><li>Controller layer: &#273;&#7863;t trong&#160;<code>controller</code>, c&#225;c class l&#224; controller s&#7869; c&#243; h&#7853;u t&#7889; Controller (v&#237; d&#7909;&#160;<code>UserController</code>,&#160;<code>AuthController</code>,...)</li><li>Service layer: &#273;&#7863;t trong&#160;<code>service</code>, c&#225;c class c&#243; h&#7853;u t&#7889; l&#224; Service v&#224; th&#432;&#7901;ng t&#432;&#417;ng &#7913;ng v&#7899;i controller (v&#237; d&#7909;&#160;<code>UserService</code>,...)</li><li>Data access layer: ca n&#224;y kh&#243;, b&#7903;i v&#236; layer n&#224;y bao g&#7891;m repository (&#273;&#7863;t trong&#160;<code>repository</code>&#160;v&#224; h&#7853;u t&#7889; t&#432;&#417;ng t&#7921;), DTO, model, entity... chi ti&#7871;t m&#236;nh s&#7869; n&#243;i &#7903; c&#225;c b&#224;i sau.</li></ul><p>Ngo&#224;i ra, v&#7899;i c&#225;c lo&#7841;i kh&#225;c th&#236;:</p><ul><li><code>util</code>&#160;package ch&#7913;a c&#225;c l&#7899;p util (x&#7917; l&#253; linh tinh), v&#237; d&#7909; nh&#432; convert end date, t&#237;nh to&#225;n &#273;&#417;n gi&#7843;n,...</li><li><code>common</code>&#160;package ch&#7913;a c&#225;c class &#273;&#7883;nh ngh&#297;a nh&#432; enum, interface, class d&#249;ng chung v&#224; &#273;&#417;n gi&#7843;n</li><li><code>exception</code>&#160;package ch&#7913;a c&#225;c class c&#243; nhi&#7879;m v&#7909; x&#7917; l&#253; exception trong Spring Boot.</li><li><code>component</code>&#160;ch&#7913;a c&#225;c bean &#273;&#432;&#7907;c &#273;&#7883;nh ngh&#297;a c&#242;n l&#7841;i nh&#432;ng kh&#244;ng thu&#7897;c layer n&#224;o.</li></ul><p>Xong, h&#7847;u h&#7871;t &#7913;ng d&#7909;ng Spring Boot c&#243; t&#7899;i 80% c&#7845;u tr&#250;c t&#432;&#417;ng t&#7921;. Kh&#225;c bi&#7879;t l&#224; r&#7845;t nh&#7887;, ch&#7881; &#273;&#417;n gi&#7843;n n&#7857;m trong c&#225;ch &#273;&#7863;t t&#234;n th&#244;i.</p></h2><h2>3. T&#7893; ch&#7913;c code theo t&#237;nh n&#259;ng</h2><h2><p>C&#225;ch n&#224;y c&#243; h&#417;i kh&#225;c v&#7899;i c&#225;ch t&#7893; ch&#7913;c theo m&#244; h&#236;nh 3 l&#7899;p &#7903; tr&#234;n. C&#7909; th&#7875; thay v&#236; chia th&#224;nh c&#225;c package d&#7921;a theo layer, th&#236; c&#225;ch n&#224;y chia theo t&#237;nh n&#259;ng. Ngh&#297;a l&#224; m&#7895;i t&#237;nh n&#259;ng, v&#237; d&#7909;&#160;<code>user</code>&#160;package th&#236; s&#7869; ch&#7913;a n&#224;o l&#224;&#160;<code>UserController</code>,&#160;<code>UserService</code>,...</p><p><span>Th&#250; th&#7921;c &#273;&#226;y l&#224; l&#7847;n &#273;&#7847;u m&#236;nh th&#7845;y ki&#7871;n tr&#250;c ki&#7875;u n&#224;y, nh&#432;ng n&#243; kh&#225; hay v&#224; ph&#249; h&#7907;p khi d&#7921; &#225;n c&#243; nhi&#7873;u t&#237;nh n&#259;ng.</span></p><p>Ngu&#7891;n tham kh&#7843;o &#7903; &#273;&#226;y&#160;<a href="https://shareprogramming.net/wp-content/uploads/2021/01/project-structure-1.png" target="_blank">https://shareprogramming.net/wp-content/uploads/2021/01/project-structure-1.png</a>.</p></h2>', 'Cách cấu trúc dự án Spring Boot', 'eeb2e3cc-de6d-11ec-9d64-0242ac120002', 0, 0, 0);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74cfb2-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au2', '2022-05-23 18:31:42.386219', 'au2', 1, 'SQL - RDBMS Databases', '<h2><p>There are many popular RDBMS available to work with. This tutorial gives a brief overview of some of the most popular RDBMS&#8217;s. This would help you to compare their basic features.</p></h2><h2>MySQL</h2><h2><p>MySQL is an open source SQL database, which is developed by a Swedish company &#8211; MySQL AB. MySQL is pronounced as &#34;my ess-que-ell,&#34; in contrast with SQL, pronounced &#34;sequel.&#34;</p><p>MySQL is supporting many different platforms including Microsoft Windows, the major Linux distributions, UNIX, and Mac OS X.</p><p>MySQL has free and paid versions, depending on its usage (non-commercial/commercial) and features. MySQL comes with a very fast, multi-threaded, multi-user and robust SQL database server.</p></h2><h3>History</h3><h2><ul class="list"><li><p>Development of MySQL by Michael Widenius &amp; David Axmark beginning in 1994.</p></li><li><p>First internal release on 23<span>rd</span>&#160;May 1995.</p></li><li><p>Windows Version was released on the 8<span>th</span>&#160;January 1998 for Windows 95 and NT.</p></li><li><p>Version 3.23: beta from June 2000, production release January 2001.</p></li><li><p>Version 4.0: beta from August 2002, production release March 2003 (unions).</p></li><li><p>Version 4.1: beta from June 2004, production release October 2004.</p></li><li><p>Version 5.0: beta from March 2005, production release October 2005.</p></li><li><p>Sun Microsystems acquired MySQL AB on the 26<span>th</span>&#160;February 2008.</p></li><li><p>Version 5.1: production release 27<span>th</span>&#160;November 2008.</p></li></ul></h2><h3>Features</h3><h2><ul class="list"><li>High Performance.</li><li>High Availability.</li><li>Scalability and Flexibility Run anything.</li><li>Robust Transactional Support.</li><li>Web and Data Warehouse Strengths.</li><li>Strong Data Protection.</li><li>Comprehensive Application Development.</li><li>Management Ease.</li><li>Open Source Freedom and 24 x 7 Support.</li><li>Lowest Total Cost of Ownership.</li></ul></h2><h2>MS SQL Server</h2><h2><p>MS SQL Server is a Relational Database Management System developed by Microsoft Inc. Its primary query languages are &#8722;</p><ul class="list"><li>T-SQL</li><li>ANSI SQL</li></ul></h2><h3>History</h3><h2><ul class="list"><li><p>1987 - Sybase releases SQL Server for UNIX.</p></li><li><p>1988 - Microsoft, Sybase, and Aston-Tate port SQL Server to OS/2.</p></li><li><p>1989 - Microsoft, Sybase, and Aston-Tate release SQL Server 1.0 for OS/2.</p></li><li><p>1990 - SQL Server 1.1 is released with support for Windows 3.0 clients.</p></li><li><p>Aston - Tate drops out of SQL Server development.</p></li><li><p>2000 - Microsoft releases SQL Server 2000.</p></li><li><p>2001 - Microsoft releases XML for SQL Server Web Release 1 (download).</p></li><li><p>2002 - Microsoft releases SQLXML 2.0 (renamed from XML for SQL Server).</p></li><li><p>2002 - Microsoft releases SQLXML 3.0.</p></li><li><p>2005 - Microsoft releases SQL Server 2005 on November 7th, 2005.</p></li></ul></h2><h3>Features</h3><h2><ul class="list"><li>High Performance</li><li>High Availability</li><li>Database mirroring</li><li>Database snapshots</li><li>CLR integration</li><li>Service Broker</li><li>DDL triggers</li><li>Ranking functions</li><li>Row version-based isolation levels</li><li>XML integration</li><li>TRY...CATCH</li><li>Database Mail</li></ul></h2><h2>ORACLE</h2><h2><p>It is a very large multi-user based database management system. Oracle is a relational database management system developed by "Oracle Corporation".</p><p>Oracle works to efficiently manage its resources, a database of information among the multiple clients requesting and sending data in the network.</p><p>It is an excellent database server choice for client/server computing. Oracle supports all major operating systems for both clients and servers, including MSDOS, NetWare, UnixWare, OS/2 and most UNIX flavors.</p></h2><h3>History</h3><h2><p>Oracle began in 1977 and celebrating its 32 wonderful years in the industry (from 1977 to 2009).</p><ul class="list"><li><p>1977 - Larry Ellison, Bob Miner and Ed Oates founded Software Development Laboratories to undertake development work.</p></li><li><p>1979 - Version 2.0 of Oracle was released and it became first commercial relational database and first SQL database. The company changed its name to Relational Software Inc. (RSI).</p></li><li><p>1981 - RSI started developing tools for Oracle.</p></li><li><p>1982 - RSI was renamed to Oracle Corporation.</p></li><li><p>1983 - Oracle released version 3.0, rewritten in C language and ran on multiple platforms.</p></li><li><p>1984 - Oracle version 4.0 was released. It contained features like concurrency control - multi-version read consistency, etc.</p></li><li><p>1985 - Oracle version 4.0 was released. It contained features like concurrency control - multi-version read consistency, etc.</p></li><li><p>2007 - Oracle released Oracle11g. The new version focused on better partitioning, easy migration, etc.</p></li></ul></h2><h3>Features</h3><h2><ul class="list"><li>Concurrency</li><li>Read Consistency</li><li>Locking Mechanisms</li><li>Quiesce Database</li><li>Portability</li><li>Self-managing database</li><li>SQL*Plus</li><li>ASM</li><li>Scheduler</li><li>Resource Manager</li><li>Data Warehousing</li><li>Materialized views</li><li>Bitmap indexes</li><li>Table compression</li><li>Parallel Execution</li><li>Analytic SQL</li><li>Data mining</li><li>Partitioning</li></ul></h2><h2>MS ACCESS</h2><h2><p>This is one of the most popular Microsoft products. Microsoft Access is an entry-level database management software. MS Access database is not only inexpensive but also a powerful database for small-scale projects.</p><p>MS Access uses the Jet database engine, which utilizes a specific SQL language dialect (sometimes referred to as Jet SQL).</p><p>MS Access comes with the professional edition of MS Office package. MS Access has easyto-use intuitive graphical interface.</p><ul class="list"><li><p>1992 - Access version 1.0 was released.</p></li><li><p>1993 - Access 1.1 released to improve compatibility with inclusion the Access Basic programming language.</p></li><li><p>The most significant transition was from Access 97 to Access 2000.</p></li><li><p>2007 - Access 2007, a new database format was introduced ACCDB which supports complex data types such as multi valued and attachment fields.</p></li></ul></h2><h3>Features</h3><h2><ul class="list"><li><p>Users can create tables, queries, forms and reports and connect them together with macros.</p></li><li><p>Option of importing and exporting the data to many formats including Excel, Outlook, ASCII, dBase, Paradox, FoxPro, SQL Server, Oracle, ODBC, etc.</p></li><li><p>There is also the Jet Database format (MDB or ACCDB in Access 2007), which can contain the application and data in one file. This makes it very convenient to distribute the entire application to another user, who can run it in disconnected environments.</p></li><li><p>Microsoft Access offers parameterized queries. These queries and Access tables can be referenced from other programs like VB6 and .NET through DAO or ADO.</p></li><li><p>The desktop editions of Microsoft SQL Server can be used with Access as an alternative to the Jet Database Engine.</p></li><li><p>Microsoft Access is a file server-based database. Unlike the client-server relational database management systems (RDBMS), Microsoft Access does not implement database triggers, stored procedures or transaction logging.</p></li></ul></h2>', 'How to create database in sql', 'eeb2f98e-de6d-11ec-9d64-0242ac120002', 3.5, 7, 2);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74d368-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au2', '2022-05-23 18:31:42.386219', 'au2', 1, 'SQL - SELECT Database, USE Statement', '<h2><p>When you have multiple databases in your SQL Schema, then before starting your operation, you would need to select a database where all the operations would be performed.</p><p>The SQL&#160;<span>USE</span>&#160;statement is used to select any existing database in the SQL schema.</p></h2><h2>Syntax</h2><h2><p>The basic syntax of the USE statement is as shown below &#8722;</p><pre class="result notranslate">USE DatabaseName;&#10;</pre><p>Always the database name should be unique within the RDBMS.</p></h2><h2>Example</h2><h2><p>You can check the available databases as shown below &#8722;</p><pre class="prettyprint notranslate prettyprinted"><span class="pln">SQL</span><span class="pun">&gt;</span><span class="pln"> SHOW DATABASES</span><span class="pun">;</span><span class="pln">&#10;</span><span class="pun">+--------------------+</span><span class="pln">&#10;</span><span class="pun">|</span><span class="pln"> </span><span class="typ">Database</span><span class="pln">           </span><span class="pun">|</span><span class="pln">&#10;</span><span class="pun">+--------------------+</span><span class="pln">&#10;</span><span class="pun">|</span><span class="pln"> information_schema </span><span class="pun">|</span><span class="pln">&#10;</span><span class="pun">|</span><span class="pln"> AMROOD             </span><span class="pun">|</span><span class="pln">&#10;</span><span class="pun">|</span><span class="pln"> TUTORIALSPOINT     </span><span class="pun">|</span><span class="pln">&#10;</span><span class="pun">|</span><span class="pln"> mysql              </span><span class="pun">|</span><span class="pln">&#10;</span><span class="pun">|</span><span class="pln"> orig               </span><span class="pun">|</span><span class="pln">&#10;</span><span class="pun">|</span><span class="pln"> test               </span><span class="pun">|</span><span class="pln">&#10;</span><span class="pun">+--------------------+</span><span class="pln">&#10;</span><span class="lit">6</span><span class="pln"> rows </span><span class="kwd">in</span><span class="pln"> </span><span class="kwd">set</span><span class="pln"> </span><span class="pun">(</span><span class="lit">0.00</span><span class="pln"> sec</span><span class="pun">)</span></pre><p>Now, if you want to work with the AMROOD database, then you can execute the following SQL command and start working with the AMROOD database.</p><pre class="prettyprint notranslate prettyprinted"><span class="pln">SQL</span><span class="pun">&gt;</span><span class="pln"> USE AMROOD</span><span class="pun">;</span></pre></h2>', 'How to select database in sql', 'eeb2f98e-de6d-11ec-9d64-0242ac120002', 3.5, 7, 2);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74e254-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au2', '2022-05-23 18:31:42.386219', 'au2', 1, 'Working with Disconnected Entity Graph in Entity Framework Core', '<h1>First EF Core Console Application</h1><h1><p>Here you will learn how to use Entity Framework Core with&#160;<a href="https://www.entityframeworktutorial.net/code-first/what-is-code-first.aspx" target="_blank">Code-First</a>&#160;approach step by step. To demonstrate this, we will create a .NET Core Console application using Visual Studio 17 (or greater).</p><p>The .NET Core Console application can be created either using Visual Studio 2017 or Command Line Interface (CLI) for .NET Core. Here we will use Visual Studio 2017.</p><p>To create .NET Core Console application, open Visual Studio 2017 and select on the menu: File -&gt; New -&gt; Project.. This will open the New Project popup, as shown below.</p><p>In the New Project popup, expand&#160;<span>Installed -&gt; Visual C#</span>&#160;in the left pane and select the&#160;<span>Console App (.NET Core)</span>&#160;template in the middle pane. Enter the Project Name &amp; Location and click the&#160;<span>OK</span>&#160;button to create a console application, as shown below.<br></p><p>Now, we need to install EF Core in our console application using Package Manager Console. Select on the menu: Tools -&gt; NuGet Package Manager -&gt; Package Manager Console and execute the following command to install the SQL Server provider package:</p><p><samp>PM&gt; Install-Package Microsoft.EntityFrameworkCore.SqlServer</samp></p><p>Learn more about installing EF Core in the&#160;<a href="https://www.entityframeworktutorial.net/efcore/install-entity-framework-core.aspx" target="_blank">EF Core Installation</a>&#160;chapter.</p></h1><h2>Creating the Model</h2><h1><p>Entity Framework needs to have a model (Entity Data Model) to communicate with the underlying database. It builds a model based on the shape of your domain classes, the Data Annotations and Fluent API configurations.</p><p>The EF model includes three parts: conceptual model, storage model, and mapping between the conceptual and storage models. In the code-first approach, EF builds the conceptual model based on your domain classes (entity classes), the context class and configurations. EF Core builds the storage model and mappings based on the provider you use. For example, the storage model will be different for the SQL Server compared with DB2.</p><p>EF uses this model for CRUD (Create, Read, Update, Delete) operations to the underlying database.</p><p>So, we need to create entity classes and context classes first. The followings are simple entity classes for Student and Course:</p><pre class="csharpcode"><span class="kwrd">public</span> <span class="kwrd">class</span> Student&#10;{&#10;    <span class="kwrd">public</span> <span class="kwrd">int</span> StudentId { get; set; }&#10;    <span class="kwrd">public</span> <span class="kwrd">string</span> Name { get; set; }&#10;}&#10;&#10;<span class="kwrd">public</span> <span class="kwrd">class</span> Course&#10;{&#10;    <span class="kwrd">public</span> <span class="kwrd">int</span> CourseId { get; set; }&#10;    <span class="kwrd">public</span> <span class="kwrd">string</span> CourseName { get; set; }&#10;}&#10;</pre><p>Now, we need to create a context class by deriving the&#160;<code>DbContext</code>, as shown in the previous chapter. The following&#160;<code>SchoolContext</code>&#160;class is also called context class.</p><pre class="csharpcode"><span class="kwrd">namespace</span> EFCoreTutorials&#10;{&#10;    <span class="kwrd">public</span> <span class="kwrd">class</span> <span class="userclass">SchoolContext</span> : <span class="userclass">DbContext</span>&#10;    {&#10;        <span class="kwrd">public</span> <span class="userclass">DbSet</span>&lt;<span class="userclass">Student</span>&gt; Students { get; set; }&#10;        <span class="kwrd">public</span> <span class="userclass">DbSet</span>&lt;<span class="userclass">Course</span>&gt; Courses { get; set; }&#10;&#10;        <span class="kwrd">protected</span> <span class="kwrd">override</span> <span class="kwrd">void</span> OnConfiguring(<span class="userclass">DbContextOptionsBuilder</span> optionsBuilder)&#10;        { &#10;            optionsBuilder.UseSqlServer(<span class="str">@&#34;Server=.\SQLEXPRESS;Database=SchoolDB;Trusted_Connection=True;&#34;</span>);&#10;        }&#10;    }&#10;}&#10;</pre><p>The above context class includes two&#160;<code>DbSet&lt;TEntity&gt;</code>&#160;properties, for&#160;<code>Student</code>&#160;and&#160;<code>Course</code>, type which will be mapped to the&#160;<code>Students</code>&#160;and&#160;<code>Courses</code>&#160;tables in the underlying database. In the&#160;<code>OnConfiguring()</code>&#160;method, an instance of&#160;<code>DbContextOptionsBuilder</code>&#160;is used to specify which database to use. We have installed MS SQL Server provider, which has added the extension method&#160;<code>UseSqlServer</code>&#160;on&#160;<code>DbContextOptionsBuilder</code>.</p><p>The connection string&#160;<code>&#34;Server=.\SQLEXPRESS;Database=SchoolDB;Trusted_Connection=True;&#34;</code>&#160;in the&#160;<code>UseSqlServer</code>&#160;method provides database information:&#160;<code>Server=</code>&#160;specifies the DB Server to use,&#160;<code>Database=</code>&#160;specifies the name of the database to create and&#160;<code>Trusted_Connection=True</code>&#160;specifies the Windows authentication mode. EF Core will use this connection string to create a database when we run the migration.</p><p>After creating the context and entity classes, its time to add the migration to create a database.</p></h1>', 'How to working with Disconnected Entity Graph', 'eeb300f0-de6d-11ec-9d64-0242ac120002', 0, 0, 0);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74e66e-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au2', '2022-05-23 18:31:42.386219', 'au2', 1, 'Configurations in Entity Framework Core', '<p>You learned about default&#160;<a href="https://www.entityframeworktutorial.net/efcore/conventions-in-ef-core.aspx">Conventions in EF Core</a>&#160;in the previous chapter. Many times we want to customize the entity to table mapping and do not want to follow default conventions. EF Core allows us to configure domain classes in order to customize the EF model to database mappings. This programming pattern is referred to as&#160;<a href="https://en.wikipedia.org/wiki/Convention_over_configuration" target="_blank">Convention over Configuration</a>.</p><p>There are two ways to configure domain classes in EF Core (same as in EF 6).</p><ol><li>By using Data Annotation Attributes</li><li>By using Fluent API</li></ol><h2>Data Annotation Attributes</h2><p>Data Annotations is a simple attribute based configuration method where different .NET attributes can be applied to domain classes and properties to configure the model.</p><p>Data annotation attributes are not dedicated to Entity Framework, as they are also used in ASP.NET MVC. This is why these attributes are included in separate namespace&#160;<a href="https://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations(v=vs.110).aspx" target="_blank"><i>System.ComponentModel.DataAnnotations</i></a>.</p><p>The following example demonstrates how the data annotations attributes can be applied to a domain class and properties to override conventions.</p><pre class="csharpcode">[<span class="userclass">Table</span>(<span class="str">&#34;StudentInfo&#34;</span>)]&#10;<span class="kwrd">public</span> <span class="kwrd">class</span> <span class="userclass">Student</span>&#10;{&#10;    <span class="kwrd">public</span> Student() { }&#10;        &#10;    [<span class="userclass">Key</span>]&#10;    <span class="kwrd">public</span> <span class="kwrd">int</span> SID { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }&#10;&#10;    [<span class="userclass">Column</span>(<span class="str">&#34;Name&#34;</span>, TypeName=<span class="str">&#34;ntext&#34;</span>)]&#10;    [<span class="userclass">MaxLength</span>(20)]&#10;    <span class="kwrd">public</span> <span class="kwrd">string</span> StudentName { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }&#10;&#10;    [<span class="userclass">NotMapped</span>]&#10;    <span class="kwrd">public</span> <span class="kwrd">int</span>? Age { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }&#10;        &#10;        &#10;    <span class="kwrd">public</span> <span class="kwrd">int</span> StdId { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }&#10;&#10;    [<span class="userclass">ForeignKey</span>(<span class="str">&#34;StdId&#34;</span>)]&#10;    <span class="kwrd">public</span> <span class="kwrd">virtual</span> <span class="userclass">Standard</span> Standard { <span class="kwrd">get</span>; <span class="kwrd">set</span>; }&#10;}&#10;        </pre><p>Data annotation attributes are the same in EF 6 and EF Core. Visit&#160;<a href="https://www.entityframeworktutorial.net/code-first/dataannotation-in-code-first.aspx" target="_blank">Data Annotations</a>&#160;chapter in the EF 6 section for more information.</p><h2>Fluent API</h2><p>Another way to configure domain classes is by using Entity Framework Fluent API. EF Fluent API is based on a Fluent API design pattern (a.k.a&#160;<a href="https://en.wikipedia.org/wiki/Fluent_interface" target="_blank">Fluent Interface</a>) where the result is formulated by&#160;<a href="https://en.wikipedia.org/wiki/Method_chaining" target="_blank">method chaining</a>.</p>', 'Configurations in Entity Framework Core', 'eeb300f0-de6d-11ec-9d64-0242ac120002', 0, 0, 0);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74f6cc-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au2', '2022-05-23 18:31:42.386219', 'au2', 1, 'Install Entity Framework Core', '<h1>Install Entity Framework Core</h1><p>Entity Framework Core can be used with .NET Core or .NET 4.6 based applications. Here, you will learn to install and use Entity Framework Core 2.0 in .NET Core applications using Visual Studio 2017.</p><p>EF Core is not a part of .NET Core and standard .NET framework. It is available as a NuGet package. You need to install NuGet packages for the following two things to use EF Core in your application:</p><ol><li>EF Core DB provider</li><li>EF Core tools</li></ol><p>Lets install the above NuGet packages in the .NET Core console application in Visual Studio 2017.</p><h2>Install EF Core DB Provider</h2><p>As mentioned in the previous chapter, EF Core allows us to access databases via the provider model. There are different&#160;<a href="https://www.entityframeworktutorial.net/efcore/entity-framework-core.aspx#efcore-db-providers">EF Core DB providers</a>&#160;available for the different databases. These providers are available as NuGet packages.</p><p>First, we need to install the NuGet package for the provider of the database we want to access. Here, we want to access MS SQL Server database, so we need to install&#160;<code>Microsoft.EntityFrameworkCore.SqlServer</code>&#160;NuGet package.</p><p>To install the DB provider NuGet package, right click on the project in the Solution Explorer in Visual Studio and select Manage NuGet Packages.. (or select on the menu: Tools -&gt; NuGet Package Manager -&gt; Manage NuGet Packages For Solution).</p><p>This will open NuGet Package Manager UI. Click on the Browse or the Updates tab and search for Microsoft.entityframeworkcore in the search box at the top left corner, as shown below.<br></p><p>Choose the provider package for the database you want to access. In this case select&#160;<code>Microsoft.EntityFrameworkCore.SqlServer</code>&#160;for MS SQL Server as shown above. (make sure that it has the .NET symbol and the Author is Microsoft). Click Install to start the installation.</p><p>The preview popup displays the list of packages it is going to install in your application. Review the changes and click OK.</p><p>Finally, accept the license terms associated with the packages that are going to be installed<br></p><p>This will install the&#160;<code>Microsoft.EntityFrameworkCore.SqlServer</code>&#160;package. Verify it in Dependencies -&gt; NuGet, as shown below.<br></p><p>Notice that the provider NuGet package also installed other dependent packages such as&#160;<code>Microsoft.EntityFrameworkCore.Relational</code>&#160;and&#160;<code>System.Data.SqlClient</code>.</p><p><span>Alternatively,</span>&#160;you can also install provider NuGet package using Package Manager Console. Go to Tools -&gt; NuGet Package Manager -&gt; Package Manager Console and execute the following command to install SQL Server provider package:</p><h2>Install EF Core Tools</h2><p>Along with the DB provider package, you also need to install EF tools to execute EF Core commands. These make it easier to perform several EF Core-related tasks in your project at design time, such as migrations, scaffolding, etc.</p><p>EF Tools are available as NuGet packages. You can install NuGet package for EF tools depending on where you want to execute commands: either using Package Manager Console (PowerShell version of EF Core commands) or using dotnet CLI.</p><h3>Install EF Core Tools for PMC</h3><p>In order to execute EF Core commands from Package Manager Console, search for the&#160;<code>Microsoft.EntityFrameworkCore.Tools</code>&#160;package from NuGet UI and install it as shown below.</p><p>This will allow you to execute EF Core commands for scaffolding, migration etc. directly from Package Manager Console (PMC) within Visual Studio.</p><h3>Install EF Core Tools for dotnet CLI</h3><p>If you want to execute EF Core commands from .NET Cores CLI (Command Line Interface), first install the NuGet package&#160;<code>Microsoft.EntityFrameworkCore.Tools.DotNet</code>&#160;using NuGet UI.</p><p>After installing&#160;<code>Microsoft.EntityFrameworkCore.Tools.DotNet</code>&#160;package, edit the .csproj file by right clicking on the project in the Solution Explorer and select Edit &lt;projectname&gt;.csproj. Add&#160;<code>&lt;DotNetCliToolReference&gt;</code>&#160;node as shown below. This is an extra step you need to perform in order to execute EF Core 2.0 commands from dotnet CLI in VS2017.</p><pre class="csharpcode"><span class="kwrd">&lt;</span><span class="html">Project</span> <span class="attr">Sdk</span><span class="kwrd">=&#34;Microsoft.NET.Sdk&#34;</span><span class="kwrd">&gt;</span>&#10;  <span class="kwrd">&lt;</span><span class="html">PropertyGroup</span><span class="kwrd">&gt;</span>&#10;    <span class="kwrd">&lt;</span><span class="html">OutputType</span><span class="kwrd">&gt;</span>Exe<span class="kwrd">&lt;/</span><span class="html">OutputType</span><span class="kwrd">&gt;</span>&#10;    <span class="kwrd">&lt;</span><span class="html">TargetFramework</span><span class="kwrd">&gt;</span>netcoreapp2.0<span class="kwrd">&lt;/</span><span class="html">TargetFramework</span><span class="kwrd">&gt;</span>&#10;  <span class="kwrd">&lt;/</span><span class="html">PropertyGroup</span><span class="kwrd">&gt;</span>&#10;  <span class="kwrd">&lt;</span><span class="html">ItemGroup</span><span class="kwrd">&gt;</span>&#10;    <span class="kwrd">&lt;</span><span class="html">PackageReference</span> <span class="attr">Include</span><span class="kwrd">=&#34;Microsoft.EntityFrameworkCore.SqlServer&#34;</span> <span class="attr">Version</span><span class="kwrd">=&#34;2.0.0&#34;</span> <span class="kwrd">/&gt;</span>&#10;    <span class="kwrd">&lt;</span><span class="html">PackageReference</span> <span class="attr">Include</span><span class="kwrd">=&#34;Microsoft.EntityFrameworkCore.Tools&#34;</span> <span class="attr">Version</span><span class="kwrd">=&#34;2.0.0&#34;</span> <span class="kwrd">/&gt;</span>&#10;    <span><span class="kwrd">&lt;</span><span class="html">DotNetCliToolReference</span> <span class="attr">Include</span><span class="kwrd">=&#34;Microsoft.EntityFrameworkCore.Tools.DotNet&#34;</span> <span class="attr">Version</span><span class="kwrd">=&#34;2.0.0&#34;</span> <span class="kwrd">/&gt;</span></span>&#10;  <span class="kwrd">&lt;/</span><span class="html">ItemGroup</span><span class="kwrd">&gt;</span>&#10;<span class="kwrd">&lt;/</span><span class="html">Project</span><span class="kwrd">&gt;</span></pre><p>Now, open the command prompt (or terminal) from the root folder of your project and execute EF Core commands from CLI starting with&#160;<span>dotnet ef</span>.</p><p>Thus, you can install required packages for EF Core 2.0 to get started.<br></p>', 'How to Install Entity Framework Core', 'eeb300f0-de6d-11ec-9d64-0242ac120002', 0, 0, 0);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa74ffc8-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au3', '2022-05-23 18:31:42.386219', 'au3', 1, 'Get to know Photoshop on your iPad', '<h1><p><span>What you learned: Get familiar with the interface of Photoshop on your iPad</span></p><p><span>Tools and tool options</span></p><ul><li>In the Toolbar, tap a tool to select it. The Tool Options bar opens if the tool has options.</li><li>Drag the Tool Options bar by its handle to position it anywhere or to dock it to the bottom of the Toolbar.</li><li>Long-press or double-tap some tools to reveal alternative tools.</li><li>Tap the foreground or background Color chip in the Toolbar to open the Color Picker and choose a color.</li><li>Swipe up or down on the Color chips to switch them.</li></ul><p><span>Gestures</span></p><ul><li>Tap the Question icon &gt; View gestures to see a list of touch gestures. For example:</li><li>Pinch or spread with two fingers to zoom.</li><li>Drag with two fingers to pan.</li><li>Tap with two fingers to undo. Tap with three fingers to redo.</li></ul><p><span>Touch Shortcut</span></p><p>The circle at the bottom left is the Touch Shortcut. It&#8217;s a handy way to access additional functions, especially when you&#8217;re not using a keyboard. Tap the Question icon &gt; View touch shortcuts to see a list of currently available touch shortcuts. For example:</p><ol><li>Select the Move tool.</li><li>Press the Touch Shortcut and hold it down as you drag the image. This changes the behavior to constrain movement horizontally, vertically, or diagonally.</li><li>Press the Touch Shortcut, slide your finger to its outer ring and hold it down as you drag the image. This changes the behavior to duplicate the selected layer.</li></ol><p><span>Keyboard shortcuts</span></p><p>You can use a keyboard and keyboard shortcuts with Photoshop on your iPad.</p><ul><li>Tap the Question icon &gt; View keyboard shortcuts to see a list of keyboard shortcuts, such as Command+Z to undo.</li></ul><p><span>Layers</span></p><p>You can view layers in either Compact Layers view, which gives you more room to work, or in Detailed Layers view, which displays more information. At the top of the Task bar:</p><ul><li>Tap the second icon to switch to Detailed Layers view.</li><li>Tap the first icon to switch to Compact Layers view.</li></ul><p>The icons in the center of the Task bar control other layer-related functions. For example:</p><ul><li>Tap the Eye icon to change the visibility of the selected layer.</li><li>Tap the Mask icon to add a layer mask to the selected layer.</li><li>Tap the Three-Dot icon to access many other layer commands.</li></ul><p><span>Layer properties</span></p><p>Layer properties, like Opacity and Blend Mode, are in the Layer Properties panel.</p><ul><li>Tap the third icon at the top of the Task bar to open the Layer Properties panel.</li></ul><p><span>Share and save</span></p><ul><li>Tap the Share icon at the top of the screen to export the image to various locations.</li><li>The image automatically saves to the Adobe cloud every few minutes as you work, so you don&#8217;t have to worry about saving</li></ul></h1>', 'How to Photoshop on ipad', 'eeb30848-de6d-11ec-9d64-0242ac120002', 0, 0, 0);
INSERT INTO public.el_lesson(id, created_at, created_by, last_modified_at, last_modified_by, version, name, content, description, course_id, star_avg, total_star, total_rating)VALUES ('aa75066c-de6e-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'au3', '2022-05-23 18:31:42.386219', 'au3', 1, 'Make a composite', '<h1><p><span>What you learned: Change layer stacking order, add a photo from your Camera Roll to a new layer, transform a layer, apply a layer blend mode, select multiple layers, group layers</span></p><p><span>Layer views</span></p><p>Work in Compact Layers view to maximize your workspace; switch to Detailed Layers view when you want more information about your layers. Use the icons at the top of the Task bar to switch between layer views.</p><p><span>Layer stacking order</span></p><ol><li>Tap a layer to select it.</li><li>Drag the layer up or down in the layer stack to change the front to back arrangement of content in the image.</li></ol><p><span>Add a photo from your Camera Roll</span></p><ol><li>Tap the Place Image tool in the Toolbar, choose Camera Roll, and navigate to a photo in the Camera Roll. The photo opens in Transform mode.</li><li>Drag the handles on the blue Transform boundary to scale or reshape the placed image. Press inside the boundary and drag to move the placed image.</li><li>Tap Done to exit Transform mode.</li></ol><p><span>Apply a layer blend mode</span></p><ol><li>Tap the Layer Properties icon in the Task bar to open the Layer Properties panel with controls that affect the selected layer.</li><li>In the Layer Properties panel, tap the Blend Mode menu and choose a blend mode to blend the active layer with the layers below.</li></ol><p><span>Select multiple layers</span></p><p>There are several reasons to select multiple layers. You may want to move or transform different layers together. Or you may want to group layers to organize them.</p><ol><li>Tap one layer in the Layers panel to select it.</li><li>In the Task bar, tap the Three-Dot icon and choose Begin multi-select mode.</li><li>Tap the checkbox on other layers to add them to the layer selection.</li></ol><p><span>Tip:</span>&#160;Alternatively, you could use the Touch Shortcut to select multiple layers. Tap one layer in the Layers panel to select it. Then press and hold the Touch Shortcut as you tap other layers to add them to the layer selection.</p><p><span>Group layers</span></p><ul><li>With multiple layers selected, tap the Folder icon in the Task bar to create a layer group in the Layers panel.</li><li>To view the layers in the group, double-tap the group thumbnail in Compact Layers view or tap the triangle to the left of the group in Detailed Layers view.</li></ul></h1>', ' how to make a composite', 'eeb30c80-de6d-11ec-9d64-0242ac120002', 0, 0, 0);

INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d67e48-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 3, 'cd5ed334-de6d-11ec-9d64-0242ac120002', 'aa74bdc4-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d681fe-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 5, 'cd5ed4f6-de6d-11ec-9d64-0242ac120002', 'aa74bdc4-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d6832a-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 4, 'cd5ed334-de6d-11ec-9d64-0242ac120002', 'aa74bf70-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68442-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 5, 'cd5ed082-de6d-11ec-9d64-0242ac120002', 'aa74bf68-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68550-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 3, 'cd5ed334-de6d-11ec-9d64-0242ac120002', 'aa74bf68-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d6864a-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 3, 'cd5ed226-de6d-11ec-9d64-0242ac120002', 'aa74bf68-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68758-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 5, 'cd5ed082-de6d-11ec-9d64-0242ac120002', 'aa74c062-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68866-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 5, 'cd5ed226-de6d-11ec-9d64-0242ac120002', 'aa74c062-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68ab4-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 5, 'cd5ed226-de6d-11ec-9d64-0242ac120002', 'aa74c18e-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68c58-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 4, 'cd5ed082-de6d-11ec-9d64-0242ac120002', 'aa74c18e-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68d66-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 4, 'cd5ed4f6-de6d-11ec-9d64-0242ac120002', 'aa74c18e-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d68e6a-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 3, 'cd5ed082-de6d-11ec-9d64-0242ac120002', 'aa74cfb2-de6e-11ec-9d64-0242ac120002');
INSERT INTO public.el_rating(id, created_at, created_by, last_modified_at, last_modified_by, version, value, user_id, lesson_id)VALUES ('b4d690c2-de90-11ec-9d64-0242ac120002', '2022-05-23 18:31:42.386219', 'h', '2022-05-23 18:31:42.386219', 'h', 1, 4, 'cd5ed4f6-de6d-11ec-9d64-0242ac120002', 'aa74cfb2-de6e-11ec-9d64-0242ac120002');

Update el_rating s set created_by = (select username from el_user where id = s.user_id ), 
last_modified_by = (select username from el_user where id = s.user_id );